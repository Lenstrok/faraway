// Code generated by MockGen. DO NOT EDIT.
// Source: geo.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"
	domain "vio_coding_challenge/internal/domain"
	service "vio_coding_challenge/internal/service"

	gomock "github.com/golang/mock/gomock"
)

// MockGeoServiceI is a mock of GeoServiceI interface.
type MockGeoServiceI struct {
	ctrl     *gomock.Controller
	recorder *MockGeoServiceIMockRecorder
}

// MockGeoServiceIMockRecorder is the mock recorder for MockGeoServiceI.
type MockGeoServiceIMockRecorder struct {
	mock *MockGeoServiceI
}

// NewMockGeoServiceI creates a new mock instance.
func NewMockGeoServiceI(ctrl *gomock.Controller) *MockGeoServiceI {
	mock := &MockGeoServiceI{ctrl: ctrl}
	mock.recorder = &MockGeoServiceIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGeoServiceI) EXPECT() *MockGeoServiceIMockRecorder {
	return m.recorder
}

// GetByIP mocks base method.
func (m *MockGeoServiceI) GetByIP(ctx context.Context, ip string) (*domain.Geolocation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByIP", ctx, ip)
	ret0, _ := ret[0].(*domain.Geolocation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByIP indicates an expected call of GetByIP.
func (mr *MockGeoServiceIMockRecorder) GetByIP(ctx, ip interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByIP", reflect.TypeOf((*MockGeoServiceI)(nil).GetByIP), ctx, ip)
}

// ParseCSV mocks base method.
func (m *MockGeoServiceI) ParseCSV(ctx context.Context, filePath string, batchSize int) (*service.ParsingStats, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ParseCSV", ctx, filePath, batchSize)
	ret0, _ := ret[0].(*service.ParsingStats)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ParseCSV indicates an expected call of ParseCSV.
func (mr *MockGeoServiceIMockRecorder) ParseCSV(ctx, filePath, batchSize interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ParseCSV", reflect.TypeOf((*MockGeoServiceI)(nil).ParseCSV), ctx, filePath, batchSize)
}
